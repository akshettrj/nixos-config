#compdef odesli

autoload -U is-at-least

_odesli() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-k+[The Odesli API key to use, if any]: :_default' \
'--api-key=[The Odesli API key to use, if any]: :_default' \
'-j[Dump the output in JSON as received from API]' \
'--json[Dump the output in JSON as received from API]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_odesli_commands" \
"*::: :->odesli" \
&& ret=0
    case $state in
    (odesli)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:odesli-command-$line[1]:"
        case $line[1] in
            (get-url)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':url -- The URL to search:_default' \
&& ret=0
;;
(get-id)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':id -- The entity ID:_default' \
':platform -- The Platform from which the entity ID is taken:(spotify itunes appleMusic youtube youtubeMusic google googleStore pandora deezer tidal amazonStore amazonMusic soundcloud napster yandex spinrilla audius anghami boomplay audiomack)' \
':entity-type -- The entity type to search, can be album or song:(song album)' \
&& ret=0
;;
(platforms)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(generate-completions)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':shell -- The shell to generate completions for:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_odesli__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:odesli-help-command-$line[1]:"
        case $line[1] in
            (get-url)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(get-id)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(platforms)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(generate-completions)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_odesli_commands] )) ||
_odesli_commands() {
    local commands; commands=(
'get-url:find matches using a URL' \
'get-id:find matches using entity IDs' \
'platforms:' \
'generate-completions:generate completions for various shells' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'odesli commands' commands "$@"
}
(( $+functions[_odesli__generate-completions_commands] )) ||
_odesli__generate-completions_commands() {
    local commands; commands=()
    _describe -t commands 'odesli generate-completions commands' commands "$@"
}
(( $+functions[_odesli__get-id_commands] )) ||
_odesli__get-id_commands() {
    local commands; commands=()
    _describe -t commands 'odesli get-id commands' commands "$@"
}
(( $+functions[_odesli__get-url_commands] )) ||
_odesli__get-url_commands() {
    local commands; commands=()
    _describe -t commands 'odesli get-url commands' commands "$@"
}
(( $+functions[_odesli__help_commands] )) ||
_odesli__help_commands() {
    local commands; commands=(
'get-url:find matches using a URL' \
'get-id:find matches using entity IDs' \
'platforms:' \
'generate-completions:generate completions for various shells' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'odesli help commands' commands "$@"
}
(( $+functions[_odesli__help__generate-completions_commands] )) ||
_odesli__help__generate-completions_commands() {
    local commands; commands=()
    _describe -t commands 'odesli help generate-completions commands' commands "$@"
}
(( $+functions[_odesli__help__get-id_commands] )) ||
_odesli__help__get-id_commands() {
    local commands; commands=()
    _describe -t commands 'odesli help get-id commands' commands "$@"
}
(( $+functions[_odesli__help__get-url_commands] )) ||
_odesli__help__get-url_commands() {
    local commands; commands=()
    _describe -t commands 'odesli help get-url commands' commands "$@"
}
(( $+functions[_odesli__help__help_commands] )) ||
_odesli__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'odesli help help commands' commands "$@"
}
(( $+functions[_odesli__help__platforms_commands] )) ||
_odesli__help__platforms_commands() {
    local commands; commands=()
    _describe -t commands 'odesli help platforms commands' commands "$@"
}
(( $+functions[_odesli__platforms_commands] )) ||
_odesli__platforms_commands() {
    local commands; commands=()
    _describe -t commands 'odesli platforms commands' commands "$@"
}

if [ "$funcstack[1]" = "_odesli" ]; then
    _odesli "$@"
else
    compdef _odesli odesli
fi
